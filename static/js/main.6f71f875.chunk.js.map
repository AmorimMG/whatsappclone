{"version":3,"sources":["Api.js","firebaseConfig.js","components/ChatListItem.js","assets/whatsapp-intro.png","components/ChatIntro.js","components/MessageItem.js","components/ChatWindow.js","components/NewChat.js","components/Login.js","App.js","index.js"],"names":["firebaseapp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","fbPopup","a","provider","auth","FacebookAuthProvider","signInWithPopup","result","gitPopup","GithubAuthProvider","googlePopup","GoogleAuthProvider","twitterPopup","TwitterAuthProvider","YahooLogin","OAuthProvider","addUser","u","collection","doc","id","set","name","avatar","merge","getContactList","userId","list","get","forEach","data","push","addNewChat","user","user2","add","messages","users","newChat","update","chats","FieldValue","arrayUnion","chatId","title","image","with","onChatList","setChatList","onSnapshot","exists","sort","b","undefined","lastMessageDate","seconds","onChatContent","setList","setUsers","sendMessage","chatData","type","body","gif","now","Date","author","date","i","uData","e","lastMessage","onClick","active","useState","time","setTime","useEffect","d","hours","getHours","minutes","getMinutes","className","src","alt","ChatIntroImg","style","justifyContent","backgroundColor","useRef","recognition","SpeechRecognition","window","webkitSpeechRecognition","open","setOpen","emojiOpen","setEmojiOpen","text","setText","listening","setListening","Api","current","scrollHeight","offsetHeight","scrollTop","handleSendClick","Swal","fire","imageUrl","imageWidth","imageHeight","imageAlt","color","ref","map","item","key","height","onEmojiClick","emojiObject","emoji","disableSearchBar","disableSkinTonePicker","api_key","borderRadius","columns","onClose","onGifClick","console","log","url","onPickClose","topBarColor","width","placeholder","value","onChange","target","onKeyUp","keyCode","onstart","onend","onresult","results","transcript","start","show","chatlist","setShow","getList","icon","confirmButtonText","handleClose","left","onReceive","$","on","fadeOut","delay","handleFacebookLogin","alert","handleGithubLogin","handleGoogleLogin","handletwitterLogin","handleyahooLogin","cursor","activeChat","setActiveChat","setUser","showNewChat","setShowNewChat","darkMode","setDarkMode","document","getElementById","innerHTML","handleLoginData","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","newUser","uid","displayName","photoURL","fontSize","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6f71f875.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport { getAuth, signInWithPopup, OAuthProvider } from \"firebase/auth\";\r\nimport \"firebase/compat/firestore\";\r\n\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nconst firebaseapp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseapp.firestore();\r\n\r\nexport default {\r\n    fbPopup:async () => {\r\n        const provider = new firebase.auth.FacebookAuthProvider();\r\n        let result = await firebaseapp.auth().signInWithPopup(provider);\r\n        return result;\r\n    },\r\n    gitPopup:async () => {\r\n        const provider = new firebase.auth.GithubAuthProvider();\r\n        let result = await firebaseapp.auth().signInWithPopup(provider);\r\n        return result;\r\n    },\r\n    googlePopup:async () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        let result = await firebaseapp.auth().signInWithPopup(provider);\r\n        return result;\r\n    },\r\n    twitterPopup:async () => {\r\n        const provider = new firebase.auth.TwitterAuthProvider;\r\n        let result = await firebaseapp.auth().signInWithPopup(provider);\r\n        return result;\r\n    },\r\n    YahooLogin:async () => {\r\n        const provider = new OAuthProvider('yahoo.com');\r\n        let result = await firebaseapp.auth().signInWithPopup(provider);\r\n        return result;\r\n    },\r\n    addUser: async(u) => {\r\n        await db.collection('users').doc(u.id).set({\r\n            name: u.name,\r\n            avatar: u.avatar\r\n        }, {merge:true});\r\n    },\r\n    getContactList:async (userId) => {\r\n        let list = [];\r\n\r\n        let results = await db.collection('users').get();\r\n        results.forEach(result => {\r\n            let data = result.data();\r\n\r\n            if(result.id !== userId){\r\n                list.push({\r\n                    id: result.id,\r\n                    name: data.name,\r\n                    avatar: data.avatar\r\n                });\r\n            }\r\n        });\r\n\r\n        return list;\r\n    },\r\n    addNewChat:async (user, user2) => {\r\n        let newChat = await db.collection('chats').add({\r\n            messages: [],\r\n            users: [user.id, user2.id]\r\n        });\r\n        db.collection('users').doc(user.id).update({\r\n            chats: firebase.firestore.FieldValue.arrayUnion({\r\n                chatId: newChat.id,\r\n                title: user2.name,\r\n                image: user2.avatar,\r\n                with: user2.id\r\n            })\r\n        });\r\n        db.collection('users').doc(user2.id).update({\r\n            chats: firebase.firestore.FieldValue.arrayUnion({\r\n                chatId: newChat.id,\r\n                title: user.name,\r\n                image: user.avatar,\r\n                with: user.id\r\n            })\r\n        });\r\n    },\r\n    onChatList:(userId, setChatList) => {\r\n        return db.collection('users').doc(userId).onSnapshot((doc)=>{\r\n            if(doc.exists) {\r\n                let data = doc.data();\r\n                if(data.chats) {\r\n                    let chats = [...data.chats];\r\n                    chats.sort((a,b)=>{\r\n                        if(a.lastMessageDate === undefined) {\r\n                            return -1;\r\n                        }\r\n                        if (b.lastMessageDate === undefined) {\r\n                            return -1;\r\n                        }\r\n                        if (a.lastMessageDate.seconds < b.lastMessageDate.seconds) {\r\n                            return 1;\r\n                        } else {\r\n                            return -1;\r\n                        }\r\n                    });\r\n                    setChatList(chats);\r\n                }\r\n            }\r\n        });\r\n    },\r\n    onChatContent: (chatId, setList, setUsers) => {\r\n        return db.collection('chats').doc(chatId).onSnapshot((doc)=>{\r\n            if(doc.exists){\r\n                let data = doc.data();\r\n                setList(data.messages);\r\n                setUsers(data.users);\r\n            }\r\n        });\r\n    },\r\n    sendMessage:async (chatData, userId, type, body, gif,users) => {\r\n        let now = new Date();\r\n\r\n        db.collection('chats').doc(chatData.chatId).update({\r\n            messages: firebase.firestore.FieldValue.arrayUnion({\r\n                type,\r\n                author: userId,\r\n                body,\r\n                date: now           \r\n            })\r\n        });\r\n\r\n        for(let i in users){\r\n            let u = await db.collection('users').doc(users[i]).get();\r\n            let uData = u.data();\r\n            if(uData.chats){\r\n                let chats = [...uData.chats];\r\n\r\n                for(let e in chats){\r\n                    if(chats[e].chatId === chatData.chatId){\r\n  \r\n                        chats[e].lastMessage = body;\r\n                        chats[e].lastMessageDate = now;\r\n                    }\r\n                }\r\n\r\n                await db.collection('users').doc(users[i]).update({\r\n                    chats\r\n                });\r\n            }\r\n        }\r\n    }\r\n};","export default {\r\n    apiKey: \"AIzaSyAoeOCIge46KJZQtpueoOtmA3SY4cb6T2k\",\r\n    authDomain: \"whatsappclone-78df4.firebaseapp.com\",\r\n    projectId: \"whatsappclone-78df4\",\r\n    storageBucket: \"whatsappclone-78df4.appspot.com\",\r\n    messagingSenderId: \"355663109584\",\r\n    appId: \"1:355663109584:web:0b272fabbc8caddc43edd5\",\r\n    measurementId: \"G-NH8PPMKYEY\"\r\n  };","import React, { useState, useEffect} from 'react';\r\nimport './ChatListItem.css';\r\n\r\nexport default({onClick, active, data}) => {\r\n\r\n    const [time, setTime] = useState('');\r\n\r\n    useEffect(()=> {\r\n        if(data.lastMessageDate > 0) {\r\n            let d = new Date(data.lastMessageDate.seconds * 1000);\r\n            let hours = d.getHours();\r\n            let minutes = d.getMinutes();\r\n            hours = hours < 10 ? '0' +hours : hours;\r\n            minutes = minutes < 10 ? '0'+ minutes : minutes;\r\n            setTime(`${hours}:${minutes}`);\r\n        }\r\n    }, [data]);\r\n\r\n    return (\r\n        <div \r\n        className={`chatListItem ${active? 'active':''}`}\r\n        onClick={onClick}\r\n        >\r\n            <img className='chatListItem--avatar' src={data.image} alt=\"\" />\r\n            <div className=\"chatListItem--lines\">\r\n                <div className=\"chatListItem--line\">\r\n                    <div className=\"chatListItem--name\">{data.title}</div>\r\n                    <div className='chatListItem--date'>{time}</div>\r\n                </div>\r\n                <div className=\"chatListItem--line\">\r\n                    <div className='chatListItem--lastMsg'>\r\n                        <p>{data.lastMessage}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/whatsapp-intro.7d4c7b31.png\";","import React from 'react';\r\nimport './ChatIntro.css';\r\nimport ChatIntroImg from '../assets/whatsapp-intro.png';\r\n\r\nexport default () => {\r\n    return(\r\n        <div className='chatIntro'>\r\n            <img src={ChatIntroImg} alt=\"\" />\r\n            <h1>Mantenha seu celular conectado</h1>\r\n            <h2>O WhatsApp conecta ao seu telefone para sincronizar suas mensagens.<br></br>Para reduzir o uso de dados, conecte seu telefone a uma rede Wi-Fi.</h2>\r\n        </div>\r\n    );\r\n}","import React, {useState, useEffect} from \"react\";\r\n\r\nimport './MessageItem.css';\r\n\r\nexport default ({user, data}) => {\r\n    const [time, setTime] = useState('');\r\n    useEffect(()=>{\r\n        if(data.date > 0) {\r\n            let d = new Date(data.date.seconds * 1000);\r\n            let hours = d.getHours();\r\n            let minutes = d.getMinutes();\r\n            hours = hours < 10 ? '0'+ hours : hours;\r\n            minutes = minutes < 10 ? '0'+ minutes : minutes;\r\n            setTime(`${hours}:${minutes}`);\r\n        }\r\n    }, [data]);\r\n\r\n    return (\r\n        <div \r\n        className=\"messageLine\"\r\n        style={{\r\n            justifyContent: user.id === data.author ? 'flex-end' : 'flex-start'\r\n        }}\r\n        >\r\n            <div \r\n            className=\"messageItem\"\r\n            style={{\r\n                backgroundColor: user.id === data.author ? '#DCF8C6' : '#FFF'\r\n            }}\r\n            >\r\n                <div className=\"messageText\">{data.body}</div>\r\n                <div className=\"messageDate\">{time}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport GifPicker from 'react-twitter-gifpicker';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport './ChatWindow.css';\r\n\r\nimport Api from '../Api';\r\n\r\nimport MessageItem from './MessageItem';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport GifIcon from '@material-ui/icons/Gif';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport { VisibilityRounded } from '@material-ui/icons';\r\n\r\n\r\nexport default ({user, data}) => {\r\n\r\n    const body = useRef();\r\n\r\n    let recognition = null;\r\n    let SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if(SpeechRecognition !== undefined){\r\n        recognition = new SpeechRecognition();\r\n    }\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [emojiOpen, setEmojiOpen] = useState(false);\r\n    const [text, setText] = useState ('');\r\n    const [listening, setListening] = useState (false);\r\n    const [list, setList] = useState ([]);\r\n    const [users, setUsers] = useState([]);\r\n\r\n    function SweetChatAvatar(){\r\n        Swal.fire({\r\n          title: data.title,\r\n          imageUrl: data.image,\r\n          imageWidth: 400,\r\n          imageHeight: 200,\r\n          imageAlt: 'Custom image',\r\n        })\r\n      }\r\n\r\n    useEffect(()=>{\r\n        setList([]);\r\n        let unsub = Api.onChatContent(data.chatId, setList, setUsers);\r\n        return unsub;\r\n    }, [data.chatId]);\r\n\r\n    useEffect(()=>{\r\n        if(body.current.scrollHeight > body.current.offsetHeight){\r\n            body.current.scrollTop = body.current.scrollHeight - body.current.offsetHeight;\r\n        }\r\n    }, [list]);\r\n\r\n    const handleEmojiClick = (e, emojiObject) => {\r\n        setText( text + emojiObject.emoji);\r\n    }\r\n\r\n    const onPickGif = (gif, e) => {\r\n        console.log(gif);\r\n     setText( text + gif.url); \r\n    /*  if(gif !== ''){\r\n        Api.sendMessage(data, user.id, 'text', text,gif,users);\r\n        setText('')}  */\r\n    }\r\n    const handleOpenGif = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleCloseGif = () => {\r\n        setOpen(false);\r\n    }\r\n    const handleOpenEmoji = () => {\r\n        setEmojiOpen(true);\r\n    }\r\n    const handleCloseEmoji = () => {\r\n        setEmojiOpen(false);\r\n    }\r\n    const handleMicClick = () => {\r\n        if(recognition !== null) {\r\n\r\n            recognition.onstart = () => {\r\n                setListening(true);\r\n            }\r\n            recognition.onend = () => {\r\n                setListening(false);\r\n            }\r\n            recognition.onresult = (e) => {\r\n                setText ( e.results[0][0].transcript );\r\n            }     \r\n            recognition.start();\r\n        }\r\n    }\r\n    const handleInputKeyUp = (e) =>{\r\n        if(e.keyCode == 13){\r\n            handleSendClick();\r\n        }\r\n    }\r\n    const handleSendClick = () => {\r\n        if(text !== ''){\r\n            Api.sendMessage(data, user.id, 'text', text, users);\r\n            setText('');\r\n            setEmojiOpen(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='chatWindow'>\r\n            <div className=\"chatWindow--header\">\r\n\r\n                <div className=\"chatWindow--headerinfo\">\r\n                    <img src={data.image} alt=\"\" onClick={function(){SweetChatAvatar();}} className=\"chatWindow--avatar\" />\r\n                    <div className=\"chatWindow--name\">{data.title}</div>\r\n                </div>\r\n\r\n                <div className=\"chatWindow--headerbuttons\">\r\n                    <div className=\"chatWindow--btn\">\r\n                        <SearchIcon style= {{color: '#919191'}} />\r\n                    </div>\r\n                    <div className=\"chatWindow--btn\">\r\n                        <AttachFileIcon style= {{color: '#919191'}} />\r\n                    </div>\r\n                    <div className=\"chatWindow--btn\">\r\n                        <MoreVertIcon style= {{color: '#919191'}} />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div ref={body} className=\"chatWindow--body\">\r\n                {list.map((item,key)=>(\r\n                    <MessageItem\r\n                        key = {key}\r\n                        data = {item}\r\n                        user = {user}\r\n                    />\r\n                ))}\r\n            </div>\r\n            \r\n            <div className=\"chatWindow--emojiarea\" \r\n            style={{height: emojiOpen ? '200px' : '0px'}}>\r\n            <EmojiPicker\r\n                    onEmojiClick={handleEmojiClick}\r\n                    disableSearchBar\r\n                    disableSkinTonePicker\r\n            />\r\n            </div>\r\n            <div className=\"chatWindow--gifarea\"\r\n            style={{height: open ? '200px' : '0px'}}>\r\n            <GifPicker\r\n                api_key={'wE42l5Au3DRu5K7ciJpHYXHdagmroGzN'}\r\n                borderRadius={0}\r\n                columns={4}\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                onGifClick={onPickGif}\r\n                onPickClose={false}\r\n                topBarColor={'#4ADF83'}\r\n            />\r\n            </div>\r\n            <div className=\"chatWindow--footer\">\r\n                <div className=\"chatWindow--pre\">\r\n\r\n                <div className=\"chatWindow--btn\" onClick={handleCloseEmoji} style={{width: emojiOpen? 40:0}}>\r\n                    <CloseIcon style= {{color: '#919191'}} />\r\n                </div>\r\n                <div className=\"chatWindow--btn\" onClick={handleOpenEmoji}>\r\n                    <InsertEmoticonIcon style= {{color: emojiOpen?'#009688':'#919191'}} />\r\n                </div>\r\n                <div className=\"chatWindow--btn\">\r\n                    <GifIcon \r\n                    onClick={() => setOpen(true)}\r\n                    style= {{color: open?'#009688':'#919191'}} \r\n                    />\r\n                </div>\r\n                <div className=\"chatWindow--btn\">\r\n                    <LabelIcon style= {{color: '#919191'}} />\r\n                </div>\r\n                </div>\r\n                <div className=\"chatWindow--inputarea\">\r\n                    <input className='chatWindow--input'\r\n                            type=\"text\"\r\n                            placeholder='Digite uma mensagem'\r\n                            value={text}\r\n                            onChange={e=>setText(e.target.value)} \r\n                            onKeyUp={handleInputKeyUp}\r\n                    />\r\n                </div>\r\n                <div className=\"chatWindow--pos\">\r\n\r\n                    {text === '' &&\r\n                    <div className=\"chatWindow--btn\">\r\n                    <MicIcon onClick={handleMicClick} style= {{color: listening ? '#126ECE' :'#919191'}} />\r\n                    </div>\r\n                    }\r\n                    {text !== '' && \r\n                    <div onClick={handleSendClick} className=\"chatWindow--btn\">\r\n                    <SendIcon style= {{color: '#919191'}} />\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n }\r\n","import React, { useState, useEffect } from \"react\";\r\nimport './NewChat.css';\r\n\r\nimport Api from '../Api';\r\nimport Swal from 'sweetalert2';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nexport default ({user,chatlist, show, setShow}) => {\r\n    const [list, setList] = useState([]);\r\n\r\n    function SweetAlert2(){\r\n        Swal.fire({\r\n            title: 'Sucesso!',\r\n            text: 'Conversa criada com Sucesso',\r\n            icon: 'success',\r\n            confirmButtonText: 'confirmar'\r\n          })\r\n    }\r\n    \r\n    useEffect(()=> {\r\n        const getList = async () => {\r\n            if(user !== null){\r\n                let results = await Api.getContactList(user.id);\r\n                setList(results);\r\n            }\r\n        }\r\n        getList();\r\n    }, [user]);\r\n\r\n    const addNewChat = async (user2) => {\r\n        await Api.addNewChat(user, user2);\r\n        SweetAlert2();\r\n        handleClose();\r\n    }\r\n\r\n    const handleClose = () => {\r\n         setShow(false);\r\n    }\r\n    return (\r\n        <div className=\"newChat\" style={{left: show?0:-415}}>\r\n            <div className=\"newChat--head\">\r\n                <div onClick={handleClose} className=\"newChat--backButton\">\r\n                    <ArrowBackIcon style={{color: '#FFF'}} />\r\n                </div>\r\n                <div className=\"newChat--headtitle\">Nova Conversa</div>\r\n            </div>\r\n            <div className=\"newChat--list\">\r\n                {list.map((item, key)=>(\r\n                    <div onClick={() => addNewChat(item)} className=\"newChat--item\" key={key}>\r\n\r\n                        <img className=\"newChat--itemavatar\" src={item.avatar} alt=\"\" />\r\n                        <div className=\"newChat--itemname\">{item.name}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport './Login.css';\r\nimport Api from '../Api';\r\nimport $ from 'jquery';\r\n\r\nexport default({onReceive}) => {\r\n    $(window).on('load', function() {\r\n        /*------------------\r\n            Preloder\r\n        --------------------*/\r\n        $(\".loader\").fadeOut();\r\n        $(\"#preloder\").delay(400).fadeOut(\"slow\");\r\n\r\n    });\r\n    const handleFacebookLogin = async  () => {\r\n        let result = await Api.fbPopup();\r\n        if(result){\r\n            onReceive(result.user);\r\n        }else{\r\n            alert(\"Erro!\")\r\n        }\r\n    }\r\n    const handleGithubLogin = async  () => {\r\n        let result = await Api.gitPopup();\r\n        if(result){\r\n            onReceive(result.user);\r\n        }else{\r\n            alert(\"Erro!\")\r\n        }\r\n    }\r\n    const handleGoogleLogin = async  () => {\r\n        let result = await Api.googlePopup();\r\n        if(result){\r\n            onReceive(result.user);\r\n        }else{\r\n            alert(\"Erro!\")\r\n        }\r\n    }\r\n    const handletwitterLogin = async  () => {\r\n        let result = await Api.twitterPopup();\r\n        if(result){\r\n            onReceive(result.user);\r\n        }else{\r\n            alert(\"Erro!\")\r\n        }\r\n    }\r\n    const handleyahooLogin = async  () => {\r\n        let result = await Api.YahooLogin();\r\n        if(result){\r\n            onReceive(result.user);\r\n        }else{\r\n            alert(\"Erro!\")\r\n        }\r\n    }\r\n\r\n    return (\r\n<div className=\"Geral\">\r\n    <div id=\"preloder\">\r\n\t\t<div className=\"loader\"></div>\r\n\t</div>\r\n    <div className=\"icon\">\r\n            <a \r\n                onClick={handleFacebookLogin}\r\n                style={{cursor: \"pointer\"}}\r\n                className=\"fab fa-facebook\"\r\n            >\r\n            </a>\r\n            <a \r\n                onClick={handleGithubLogin}\r\n                style={{cursor: \"pointer\"}}\r\n                className=\"fab fa-github\"\r\n            >\r\n            </a>\r\n            <a \r\n                onClick={handleGoogleLogin}\r\n                style={{cursor: \"pointer\"}}\r\n                className=\"fab fa-google\"\r\n            >\r\n            </a>\r\n            <a \r\n                onClick={handletwitterLogin}\r\n                style={{cursor: \"pointer\"}}\r\n                className=\"fab fa-twitter\"\r\n            >\r\n            </a>\r\n\r\n            <a \r\n                onClick={handleyahooLogin}\r\n                style={{cursor: \"pointer\"}}\r\n                className=\"fab fa-yahoo\"\r\n            >\r\n            </a>\r\n    </div>\r\n</div>\r\n)}\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport './components/Login.css'\n\nimport Api from './Api';\nimport Swal from 'sweetalert2';\n\nimport ChatListItem from './components/ChatListItem';\nimport ChatIntro from './components/ChatIntro';\nimport ChatWindow from './components/ChatWindow';\nimport NewChat from './components/NewChat';\nimport Login from './components/Login';\n\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\n\nexport default () => {\n  \n  const [chatlist, setChatList] = useState([]);\n  const [activeChat, setActiveChat] = useState({});\n  const [user, setUser] = useState(null);\n  const [showNewChat, setShowNewChat] = useState(false);\n  const [darkMode, setDarkMode] = useState(false)\n\n  function SweetAvatar(){\n    Swal.fire({\n      title: user.name,\n      text: 'Sua foto de perfil!',\n      imageUrl: user.avatar,\n      imageWidth: 400,\n      imageHeight: 200,\n      imageAlt: 'Custom image',\n    })\n  }\n\n  function Logado(){\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 3000,\n      timerProgressBar: true,\n      didOpen: (toast) => {\n        toast.addEventListener('mouseenter', Swal.stopTimer)\n        toast.addEventListener('mouseleave', Swal.resumeTimer)\n      }\n    })\n    \n    Toast.fire({\n      icon: 'success',\n      title: 'Logado com successo!'\n    })\n  }\n\n  useEffect(()=> {\n    if (user !== null){\n      let unsub = Api.onChatList(user.id, setChatList);\n      return unsub;\n    }\n  }, [user]);\n\n  const handleNewChat = () => {\n    setShowNewChat(true);\n  }\n\n  function handleDarkMode() {\n    setDarkMode(!darkMode)\n  }\n\n  useEffect(() => {\n    document.getElementById('colors').innerHTML = `\n    :root{\n      --main-color: ${darkMode ? '#000' : '#d2dbdc'};\n      --secondary-color:${darkMode ? '#2c2c2c' : '#EDEDED'};\n      --tertiary-color:${darkMode ? '#191e1e' : '#DDD'};\n      --other-color:${darkMode ? '#222222' : '#F6F6F6'};\n      --other-color2:${darkMode ? '#282828' : '#EEE'};\n      --other-color3:${darkMode ? '#121212' : '#fff'};\n      --other-color4: ${darkMode ? '#1f2021' : '#F8F9FA'};\n      --other-color5: ${darkMode ? '#FFF' : '#000'};\n      --other-color6: ${darkMode ? '#222222' : '#F5F5F5'};\n      --other-color7: ${darkMode ? '#282828' : '#EEE'};\n      --other-color8: ${darkMode ? '#2a2a2a' : '#EBEBEB'};\n      --other-color9: ${darkMode ? '#b9b9b9' : '#525252'};\n      --background: ${darkMode ? 'url(https://cdn.discordapp.com/attachments/870357586673815602/908329671815475210/darktheme.png)' : 'url(https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png)'};\n    } \n    `\n  }, [darkMode])\n\n    const handleLoginData = async (u) => {\n      Logado();\n      let newUser = { \n        id: u.uid,\n        name: u.displayName,\n        avatar: u.photoURL\n      };\n      await Api.addUser(newUser);\n      setUser(newUser);\n    }\n\n  if(user === null){\n    return (<Login onReceive={handleLoginData} />);\n  }\n\n  return (\n    <div className='app-window'>\n        <div className=\"sidebar\">\n        <NewChat\n          chatlist = {chatlist}\n          user = {user}\n          show = {showNewChat}\n          setShow = {setShowNewChat}\n         />\n          <header>\n            <img className=\"header--avatar\" onClick={function(){SweetAvatar();}} src={user.avatar} alt=\"\" />\n            <div className=\"header--buttons\">\n            <div onClick={handleDarkMode} className=\"header--btn\">\n                  <Brightness4Icon style={{color: '#919191'}}/>\n              </div>\n              <div className=\"header--btn\">\n                  <DonutLargeIcon style={{color: '#919191'}}/>\n              </div>\n              <div onClick={handleNewChat} className=\"header--btn\">\n                  <ChatIcon style={{color: '#919191'}}/>\n              </div>\n              <div className=\"header--btn\">\n                  <MoreVertIcon style={{color: '#919191'}}/>\n              </div>\n            </div>\n          </header>\n\n          <div className=\"search\">\n            <div className=\"search--input\">\n              <SearchIcon fontSize='small' style={{color: '#919191'}} />\n              <input type=\"search\" placeholder='Procurar ou começar uma nova conversa' />\n            </div>\n          </div>\n\n          <div className=\"chatlist\">\n            {chatlist.map((item,key) => (\n              <ChatListItem \n                key = {key}\n                data = {item}\n                active={activeChat.chatId === chatlist[key].chatId}\n                onClick = {() => setActiveChat(chatlist[key])}\n              />\n            ))}\n          </div>\n\n        </div>\n        <div className=\"contentarea\">\n          {activeChat.chatId !== undefined &&\n            <ChatWindow \n              user = {user}\n              data = {activeChat}\n            />\n          }\n          {activeChat.chatId === undefined &&\n            <ChatIntro />\n          }\n        </div>\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}